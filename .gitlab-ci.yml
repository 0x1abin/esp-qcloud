stages:
  - build
  - deploy

variables:
  BATCH_BUILD: "1"
  V: "0"
  MAKEFLAGS: "-j5 --no-keep-going"
  IDF_CI_BUILD: "1"

before_script:
  - cd $IDF_PATH
  - git submodule update --init --recursive
  - ./install.sh
  - . ./export.sh
  - cd -

build_demo_v4.3:
  stage: build
  image: espressif/idf:release-v4.3
  tags:
    - build
  script:
    - cd examples/led_light
    - idf.py set-target esp32
    - idf.py build
    - idf.py set-target esp32s2
    - idf.py build
    - idf.py set-target esp32c3
    - idf.py build
    - cd ../../

build_demo_v4.4:
  stage: build
  image: espressif/idf:release-v4.4
  tags:
    - build
  script:
    - cd examples/led_light
    - idf.py set-target esp32
    - idf.py build
    - idf.py set-target esp32s2
    - idf.py build
    - idf.py set-target esp32c3
    - idf.py build
    - idf.py set-target esp32s3
    - idf.py build
    - cd ../../
  
build_demo_v5.0:
  stage: build
  image: espressif/idf:release-v5.0
  tags:
    - build
  script:
    - cd examples/led_light
    - idf.py set-target esp32
    - idf.py build
    - idf.py set-target esp32s2
    - idf.py build
    - idf.py set-target esp32c3
    - idf.py build
    - idf.py set-target esp32s3
    - idf.py build
    - cd ../../

# build_docs:
#     stage: build
#     image: $CI_DOCKER_REGISTRY/esp32-ci-env$BOT_DOCKER_IMAGE_TAG
#     tags:
#         - build_docs
#     artifacts:
#         when: always
#         paths:
#             # English version of documentation
#             - docs/en/sphinx-warning-log.txt
#             - docs/en/_build/html
#             # Chinese version of documentation
#             - docs/zh_CN/sphinx-warning-log.txt
#             - docs/zh_CN/_build/html
#         expire_in: 1 week
#     before_script:
#       - echo "skip default before_script"
#     script:
#       - cd docs
#       # make English version of documentation
#       - cd en/
#       - make clean && make html
#       - cd ../
#       # make Chinese version of documentation
#       - cd zh_CN/
#       - make clean && make html
#       - cd ../

push_master_to_github:
  stage: deploy
  only:
    - master
    - /^release\/v/
#  when: on_success
  image: $CI_DOCKER_REGISTRY/esp32-ci-env
  variables:
    GIT_STRATEGY: clone
  before_script:
    - echo "skip default before_script"
  script:
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - echo -n $GH_PUSH_KEY >> ~/.ssh/id_rsa_base64
    - base64 --decode --ignore-garbage ~/.ssh/id_rsa_base64 > ~/.ssh/id_rsa
    - chmod 600 ~/.ssh/id_rsa
    - echo -e "Host github.com\n\tStrictHostKeyChecking no\n" >> ~/.ssh/config
    - git remote remove github &>/dev/null || true
    - git remote add github git@github.com:espressif/esp-qcloud.git
    - tools/ci/push_to_github.sh
